kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: supplychainvisibility-ingress
  namespace: supplychainvisibility
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/proxy-body-size: '0'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '600'
    # nginx.ingress.kubernetes.io/server-snippet: |
    #   client_header_buffer_size 100k;
    #   large_client_header_buffers 4 100k;
    nginx.ingress.kubernetes.io/session-cookie-expires: '172800'
    nginx.ingress.kubernetes.io/session-cookie-max-age: '172800'
    nginx.ingress.kubernetes.io/session-cookie-path: /
    nginx.ingress.kubernetes.io/session-cookie-samesite: None
    nginx.ingress.kubernetes.io/session-cookie-secure: 'true'
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/websocket-services: notificationhandlerconsumer,supplierengagementsocket
  managedFields:
    - manager: nginx-ingress-controller
      operation: Update
      apiVersion: networking.k8s.io/v1
      # time: '2024-09-17T07:08:13Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:loadBalancer:
            f:ingress: {}
      subresource: status
    - manager: Mozilla
      operation: Update
      apiVersion: networking.k8s.io/v1
      # time: '2024-10-22T19:44:22Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cert-manager.io/cluster-issuer: {}
            f:kubernetes.io/ingress.class: {}
            f:nginx.ingress.kubernetes.io/affinity: {}
            f:nginx.ingress.kubernetes.io/proxy-body-size: {}
            f:nginx.ingress.kubernetes.io/proxy-read-timeout: {}
            f:nginx.ingress.kubernetes.io/proxy-send-timeout: {}
            f:nginx.ingress.kubernetes.io/server-snippet: {}
            f:nginx.ingress.kubernetes.io/session-cookie-expires: {}
            f:nginx.ingress.kubernetes.io/session-cookie-max-age: {}
            f:nginx.ingress.kubernetes.io/session-cookie-path: {}
            f:nginx.ingress.kubernetes.io/session-cookie-samesite: {}
            f:nginx.ingress.kubernetes.io/session-cookie-secure: {}
            f:nginx.ingress.kubernetes.io/use-regex: {}
            f:nginx.ingress.kubernetes.io/websocket-services: {}
        f:spec:
          f:ingressClassName: {}
          f:rules: {}
          f:tls: {}
spec:
  ingressClassName: nginx
  # tls:
  #   - hosts:
  #       - staging.golive.settyl.com
  #     secretName: tls-secret
  rules:
    - host: gke.golive.settyl.com
      http:
        paths:
          - path: /api/healthcheck
            pathType: Prefix
            backend:
              service:
                name: configmanagementapi
                port:
                  number: 8000
